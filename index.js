import 'dotenv/config'
import {JSONFilePreset } from 'lowdb/node'
import { Bot, GrammyError, HttpError, Keyboard } from "grammy";
import { chooseWiner } from './utils.js';
const bot = new Bot(process.env.BOT_TOKEN)
const db = await JSONFilePreset(('users.json'), { "users": {} })
const cl = await JSONFilePreset(('contestList.json'), { "list": {} })

// –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∞: –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
bot.hears('–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫', async (ctx) => {
	if (ctx.message.from.id == 951161100 || ctx.message.from.id == 1070235538) {
		db.read()
		const usersList = Object.keys(db.data.users)
		let contestList = []
		for (let i = 0; i < usersList.length; i++) {
			const userId = usersList[i]
			console.log('id –∏–Ω–≤–∞–π—Ç–µ—Ä–∞', userId);
			const arrayOfInvitedUsers = db.data.users[userId]
			for (let i = 0; i < arrayOfInvitedUsers.length; i++) {
				try {
					const pass = await bot.api.getChatMember('@testchannel_178', arrayOfInvitedUsers[i]);
					if (pass.status == 'member') {
						contestList.push(userId)
						console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${arrayOfInvitedUsers[i]} –ø–æ–¥–ø–∏—Å–∞–ª—Å—è, +1 –±–∏–ª–µ—Ç –¥–ª—è ${userId}`);
					}
				} catch (error) {
					console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${arrayOfInvitedUsers[i]} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è`);
				}
			}
		}
		console.log(contestList);
		const today = new Date();
		const dd = String(today.getDate()).padStart(2, '0');
		const mm = String(today.getMonth() + 1).padStart(2, '0');
		const yyyy = today.getFullYear();
		const hour = String(today.getHours())
		const min = String(today.getMinutes())
		cl.read()
		cl.update(({ }) => {
			console.log('–ó–∞–ø–∏—Å—å –≤ contestList');
			cl.data = {contestList}
		})
		await ctx.reply(`–ó–∞–ø–∏—Å—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞, —Å–ø–∏—Å–æ–∫ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –Ω–∞ –º–æ–º–µ–Ω—Ç ${dd}.${mm}.${yyyy} ${hour}:${min}`)
		return cl;
	}
})

// –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∞:: –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
bot.hears('–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è', async (ctx) => {
	if (ctx.message.from.id == 951161100 || ctx.message.from.id == 1070235538) {
		await cl.read()
		const winnerId = chooseWiner(cl.data.contestList)
		const pass = await bot.api.getChatMember('@testchannel_178', winnerId)
		const winner = pass.user;
		ctx.reply(`–í —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø–æ–±–µ–¥–∏–ª ${winner.first_name} @${winner.username}`)
	}
})

// –°–ø–µ—Ü–∫–æ–º–∞–Ω–¥–∞: –ø–æ–º–æ—â—å –¥–ª—è –∞–¥–º–∏–Ω–∞
bot.command('help', async (ctx) => {
	if (ctx.message.from.id == 951161100 || ctx.message.from.id == 1070235538) {
		ctx.reply('–ü–µ—Ä–µ–¥ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É, –≤ –æ—Ç–≤–µ—Ç –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –∑–∞–ø–∏—Å—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞. –î–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–∂–º–∏—Ç–µ "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è". –í –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç –≤–µ—Ä–Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è!', {
			reply_markup: new Keyboard().text('–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫').row().text('–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è').resized()
		})
	} else ctx.reply('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤')
})	

// –ú–µ–Ω—é
bot.api.setMyCommands([
	{
		command: 'menu',
		description: '–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é'
	},
]);

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
const menuKeyboard = new Keyboard()
	.text('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–∑—ã–≥—Ä—ã—à–µ üé≤').row()
	.text('–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª üîó').resized()

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
const lotteryKeyboard = new Keyboard()
	.text('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ üë•').row()
	.text('–£—Å–ª–æ–≤–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ ‚ùó').row()
	.text('–ë–∏–ª–µ—Ç—ã üéüÔ∏è')
	.text('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîô').resized()

// –ö–æ–º–∞–Ω–¥–∞: —Å—Ç–∞—Ä—Ç
bot.command('start', async (ctx) => {
	if (ctx.from.is_bot === false) {
		const username = ctx.msg.from.username
		await ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${username}! \n–Ø - –±–æ—Ç —Ç–≥-–∫–∞–Ω–∞–ª–∞: <a href="https://t.me/testchannel_178">–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª</a> \n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å üëá`, {
			parse_mode: 'HTML',
			reply_markup: menuKeyboard
		})
	}
	await ctx.deleteMessage()
})

// –ö–æ–º–∞–Ω–¥–∞: –º–µ–Ω—é
bot.command('menu', async (ctx) => {
	await ctx.deleteMessage()
	await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üíÅüèª‚Äç‚ôÇÔ∏è', {
		reply_markup: menuKeyboard
	})
})

// –°–ª—É—à–∞—Ç–µ–ª–∏ –∫–Ω–æ–ø–æ–∫
bot.hears('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–∑—ã–≥—Ä—ã—à–µ üé≤', async (ctx) => {
	await ctx.deleteMessage()
	await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é üíÅüèª‚Äç‚ôÇÔ∏è', {
		reply_markup: lotteryKeyboard
	})
})

bot.hears('–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª üîó', async (ctx) => {
	await ctx.deleteMessage()
	await ctx.reply('<a href="https://t.me/testchannel_178">–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ üëà</a>', {
		parse_mode: 'HTML',
		reply_markup: new Keyboard().text('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîô').resized()
	})
})

bot.hears('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ üë•', async (ctx) => {
	await ctx.deleteMessage()
	const userId = ctx.update.message.from.id
	try {
		let pass = await bot.api.getChatMember('@testchannel_178', userId)
		if (pass.status == 'left') {
			await ctx.reply('–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å: <a href="https://t.me/testchannel_178">–∫–∞–Ω–∞–ª</a>', {
				parse_mode: 'HTML'
			})
		} else if (pass.status == 'kicked') {
			await ctx.reply('–í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª')
		}
		else {
			await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–∞ üëá', {
				reply_markup: {
					keyboard: [
						[
							{
								text: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
								request_users: {
									request_id: userId,
									request_username: true,
									user_is_bot: false
								}
							}
						],
						[{text: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–∑—ã–≥—Ä—ã—à–µ üé≤'}, { text: '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîô' }]
					],
					resize_keyboard: true
				}
			})
		}
	} catch (error) {
		console.log('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞: ', error);
	}
	
})

bot.hears('–£—Å–ª–æ–≤–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ ‚ùó', async (ctx) => {
	const chatId = ctx.update.message.chat.id
	// console.log('ctx: ', ctx.update.message.chat);
	await ctx.api.sendMessage(chatId, '–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞.\n–í–∞–∂–Ω–æ‚ùó –ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –¥—Ä—É–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª –Ω–∞ –º–æ–º–µ–Ω—Ç –ø–æ–¥–≤–µ–¥–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞.\n1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ üë•" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.\n2Ô∏è‚É£ –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –∫–∞–Ω–∞–ª, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–∫–∏–Ω—É—Ç—å –µ—ë —Å–≤–æ–µ–º—É –¥—Ä—É–≥—É –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª.\n3Ô∏è‚É£ –ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π –ø–æ–¥–ø–∏—à–µ—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, —Ç–µ–º –±–æ–ª—å—à–µ –±–∏–ª–µ—Ç–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ.\n4Ô∏è‚É£ –í—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –±–∏–ª–µ—Ç–æ–≤, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ë–∏–ª–µ—Ç—ã üéüÔ∏è"\n5Ô∏è‚É£ –ß–µ–º –±–æ–ª—å—à–µ —É –≤–∞—Å –±–∏–ª–µ—Ç–æ–≤, —Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å –Ω–∞ –ø–æ–±–µ–¥—É –ø—Ä–∏ –ø–æ–¥–≤–µ–¥–µ–Ω–∏–∏ –∏—Ç–æ–≥–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞.')
	await ctx.deleteMessage()
	await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é üíÅüèª‚Äç‚ôÇÔ∏è', {
		reply_markup: new Keyboard()
				.text('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ üë•').row()
				.text('–ë–∏–ª–µ—Ç—ã üéüÔ∏è')
				.text('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîô').resized()
	})
})

bot.hears('–ë–∏–ª–µ—Ç—ã üéüÔ∏è', async (ctx) => {
	const userId = ctx.message.from.id;
	db.read()
	if (Boolean(db.data.users[userId])) {
		const invitedUsers = db.data.users[userId];
		let tickets = 0
		for (let i=0; i < invitedUsers.length; i++) {
			try {
				let pass = await bot.api.getChatMember('@testchannel_178', invitedUsers[i])
				if (pass.status == 'member') {
					tickets += 1
				}
			} catch (error) {
				console.log('error: ', error);
			}
		}		
		await ctx.reply(`–ò–∑ ${invitedUsers.length} –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –í–∞–º–∏ –¥—Ä—É–∑–µ–π –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å ${tickets}! –ò—Ç–æ–≥–æ —É –≤–∞—Å ${tickets} –±–∏–ª–µ—Ç(–∞/–æ–≤)`, {
			reply_markup: menuKeyboard
		})
	} else await ctx.reply('‚ùó‚ö†Ô∏è –í—ã –µ—â—ë –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –¥—Ä—É–≥–∞, —É –≤–∞—Å –Ω–µ—Ç –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ')
	await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é üíÅüèª‚Äç‚ôÇÔ∏è', {
		reply_markup: lotteryKeyboard
	})
})

bot.hears('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîô', async (ctx) => {
	await ctx.deleteMessage()
	await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é üíÅüèª‚Äç‚ôÇÔ∏è', {
		reply_markup: menuKeyboard
	})
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on(':users_shared', async (ctx) => {
	const newUserId = ctx.message.user_shared.user_id
	const sponsorId = ctx.message.user_shared.request_id
	try {
		const pass = await bot.api.getChatMember('@testchannel_178', newUserId);
		if (pass.status == 'kicked') {
			await ctx.reply('‚õî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∫–∞–Ω–∞–ª–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–∫–∞')
		} else if (pass.status != 'left') {
			await ctx.reply('‚ùó‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–∫–∞')
		} else if (pass.status == 'left') {
			await db.read()
			if (!Object.hasOwn(db.data.users, sponsorId)) {
				console.log('–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç —Å–ø–æ–Ω—Å–æ—Ä');
				await db.update(({ users }) => {
					users[sponsorId] = [];
					users[sponsorId].push(newUserId)
				})
				await ctx.reply('üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –¥—Ä—É–≥—É –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è: https://t.me/testchannel_178')
				await ctx.reply('‚è± –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤–∞—à –¥—Ä—É–≥ –ø–æ–¥–ø–∏—à–µ—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª, –≤–∞–º –¥–æ–±–∞–≤–∏—Ç—Å—è –±–∏–ª–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à–∞ ')
			} else if (db.data.users[sponsorId].includes(newUserId)) {
				console.log('–î–∞–Ω–Ω—ã–π —Å–ø–æ–Ω—Å–æ—Ä —É–∂–µ –ø—Ä–∏–≥–ª–∞—à–∞–ª —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
				await ctx.reply('‚ùó‚ö†Ô∏è –í—ã —É–∂–µ –ø—Ä–∏–≥–ª–∞—à–∞–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–≥–æ')
			} else {
				await db.update(({ users }) => users[sponsorId].push(newUserId))
				console.log('–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ª–∏—Å—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –æ—Ç —Å–ø–æ–Ω—Å–æ—Ä–∞')
				await ctx.reply('üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –¥—Ä—É–≥—É –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è: https://t.me/testchannel_178')
				await ctx.reply('‚è± –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤–∞—à –¥—Ä—É–≥ –ø–æ–¥–ø–∏—à–µ—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª, –≤–∞–º –¥–æ–±–∞–≤–∏—Ç—Å—è –±–∏–ª–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à–∞ ')
			}
		}
	} catch (error) {
		console.log('CATCH –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–ª –±–æ—Ç–∞ —Ä–∞–Ω–µ–µ');
		await db.read()
		if (!Object.hasOwn(db.data.users, sponsorId)) {
			console.log('CATCH –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç —Å–ø–æ–Ω—Å–æ—Ä');
			await db.update(({ users }) => {
				users[sponsorId] = [];
				users[sponsorId].push(newUserId)
			})
			await ctx.reply('üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –¥—Ä—É–≥—É –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è: https://t.me/testchannel_178')
			await ctx.reply('‚è± –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤–∞—à –¥—Ä—É–≥ –ø–æ–¥–ø–∏—à–µ—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª, –≤–∞–º –¥–æ–±–∞–≤–∏—Ç—Å—è –±–∏–ª–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à–∞ ')
		} else if (db.data.users[sponsorId].includes(newUserId)) {
			console.log('CATCH –î–∞–Ω–Ω—ã–π —Å–ø–æ–Ω—Å–æ—Ä —É–∂–µ –ø—Ä–∏–≥–ª–∞—à–∞–ª —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
			await ctx.reply('‚ùó‚ö†Ô∏è –í—ã —É–∂–µ –ø—Ä–∏–≥–ª–∞—à–∞–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–≥–æ')
		} else {
			await db.update(({ users }) => users[sponsorId].push(newUserId))
			console.log('CATCH –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ª–∏—Å—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –æ—Ç —Å–ø–æ–Ω—Å–æ—Ä–∞')
			await ctx.reply('üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –¥—Ä—É–≥—É –∏ –ø–æ–ø—Ä–æ–æ—Å–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è: https://t.me/testchannel_178')
			await ctx.reply('‚è± –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤–∞—à –¥—Ä—É–≥ –ø–æ–¥–ø–∏—à–µ—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª, –≤–∞–º –¥–æ–±–∞–≤–∏—Ç—Å—è –±–∏–ª–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à–∞ ')
		}
	}
})

bot.catch((err) => {
	const ctx = err.ctx;
	console.error(`Error while handling update ${ctx.update.update_id}:`);
	const e = err.error;

	if (e instanceof GrammyError) {
		console.error("Error in request:", e);
	} else if (e instanceof HttpError) {
		console.error("Could not connect to Telegram", e);
	} else {
		console.error('Unknown error:', e);
	}
})

bot.on('message', async (ctx) => {
	await ctx.reply('–ú–Ω–µ –±–æ–ª–µ–µ –Ω–µ—á–µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å...', {
		reply_parameters: {message_id: ctx.msg.message_id}
	})
})
bot.start();
